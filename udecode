#!/usr/bin/env bash

set -Ceu

usage() {
	cat << EOF
Usage: udecode [FILE]...
  or:  udecode OPTION
Decode utf-8 (RFC3629) from all FILE(s) to standard output.

With no FILE, or when FILE is -, read standard input.

      --help     display this help and exit
      --version  output version information and exit
EOF
}

version() {
	cat << EOF
udecode 0.0-alpha
Copyright (c) 2019 Ryoto Saito

This work is licensed under the terms of the MIT license.
For a copy, see <https://opensource.org/licenses/MIT>.
EOF
}

invalid_opt() {
	echo Invalid option: ${1+--$1} >&2
	usage
}

OPT=

while getopts -- -: OPT
do
	case $OPT in
		-)
			case $OPTARG in
				help)
					usage
					exit
					;;
				version)
					version
					exit
					;;
				*)
					invalid_opt $OPTARG
					exit
					;;
			esac
			;;
		\?)
			# getopt prints error instead.
			usage
			exit
			;;
	esac
done
shift $(($OPTIND - 1))

# array which elements are two bytes hex string
tbts=($(cat $1 | xxd -c1 | cut -f 2 -d " "))

while [[ ${#tbts[@]} -gt 0 ]]
do
	if [[ $((0x${tbts[0]}>>7)) -eq 0 ]]
	then
		#echo -n \\u${tbts[0]}
		echo -en \\u${tbts[0]}
		tbts=(${tbts[@]:1})
	elif [[ $((0x${tbts[0]}>>5)) -eq 6 ]]
	then
		echo -n \\u$( printf "%04x" $(( (0x${tbts[0]}&31)<<6|(0x${tbts[1]}&63) )) )
		tbts=(${tbts[@]:2})
	elif [[ $((0x${tbts[0]}>>4)) -eq 14 ]]
	then
		echo -n \\u$( printf "%04x" $(( ((0x${tbts[0]}&15)<<6|(0x${tbts[1]}&63))<<6|(0x${tbts[2]}&63) )) )
		tbts=(${tbts[@]:3})
	elif [[ $((0x${tbts[0]}>>3)) -eq 30 ]]
	then
		echo -n \\U$( printf "%08x" $(( (((0x${tbts[0]}&7)<<6|(0x${tbts[1]}&63))<<6|(0x${tbts[2]}&63))<<6|(0x${tbts[3]}&63) )) )
		tbts=(${tbts[@]:4})
	else
		echo "Convert Error" >&2
		exit 1
	fi
done
